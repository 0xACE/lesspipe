{"name":"Lesspipe","tagline":"lesspipe (formerly on sourceforge)","body":"lesspipe.sh, a preprocessor for less\r\n====================================\r\n\r\nVersion: 1.83\r\nAuthor : Wolfgang Friebel, DESY (Wolfgang.Friebel AT desy.de)\r\nLicense: GPL\r\n\r\nLatest version available from:  \r\n https://github.com/wofr06/lesspipe/archive/lesspipe.zip  \r\n https://github.com/wofr06/lesspipe (git repository)  \r\n\r\nThe development version can be cloned using git:  \r\n git clone https://github.com/wofr06/lesspipe.git\r\n\r\nTo report bugs or make proposals to improve lesspipe please contact\r\nthe author by email.\r\n\r\nContents\r\n========\r\n\r\n1.   Introduction\r\n1.   Usage\r\n1.   Required programs\r\n1.   Supported file formats\r\n 2.   Supported compression methods\r\n 2.   List of preprocessed file types\r\n 2.   Conversion of files with alternate character encoding\r\n 2.   File formats currently not supported\r\n1.  Syntax highlighting\r\n 1.   List of supported languages\r\n 1.   Syntax highlighting alternatives\r\n 1.   Colored directory listing\r\n 1.   Colored listing of tar file contents\r\n6.  Displaying files with special characters in the file name\r\n7.  Examples\r\n8.  Other documentation about lesspipe\r\n9.  External links\r\n 1.   URLs to some utilities\r\n 1.   References\r\n10. Contributors\r\n\r\n1. Introduction\r\n===============\r\n\r\n To browse files under UNIX the excellent viewer less [1] can be used. By\r\n setting the environment variable LESSOPEN, less can be enhanced by external\r\n filters to become even more powerful. Most Linux distributions come already\r\n with a \"lesspipe.sh\" that covers the most common situations.\r\n\r\n The input filter for less described here is called \"lesspipe.sh\". It is able\r\n to process a wide variety of file formats. It enables users to deeply inspect\r\n archives and to display the contents of files in archives without having to\r\n unpack them before. That means file contents can be properly interpreted even\r\n if the files are compressed and contained in a hierarchy of archives (often\r\n found in RPM or DEB archives containing source tarballs). The filter is easily\r\n extensible for new formats.\r\n\r\n The input filter which is also called \"lesspipe.sh\" is written in a ksh\r\n compatible language (ksh, bash, zsh) as one of these is nearly always installed\r\n on UNIX systems and uses comparably few resources. Otherwise an implementation\r\n in perl for example would have been somewhat simpler to code. The code looks\r\n less clean than it could as it was tried to make the script compatible with\r\n a number of old shells and applications especially found on non Linux systems.\r\n\r\n The filter does different things depending on the file format. In most cases\r\n it is determined on the output of the \"file\" command [2], [6], that recognizes\r\n lots of formats. Only in a few cases the file suffix is used to determine what\r\n to display. Up to date file descriptions are included in the \"file\" package.\r\n Maintaining a list of file formats is therefore only a matter of keeping that\r\n package up to date.\r\n\r\n2. Usage\r\n========\r\n\r\n (see also the man page lesspipe.1)\r\n\r\n To activate lesspipe.sh the environment variable LESSOPEN has to be defined\r\n in the following way:\r\n\r\n     LESSOPEN=\"|lesspipe.sh %s\"; export LESSOPEN\t(sh like shells)\r\n     setenv LESSOPEN \"|lesspipe.sh %s\"\t\t(csh, tcsh)\r\n\r\n If lesspipe.sh is not in the UNIX search path or if the wrong lesspipe.sh is\r\n found in the search path, then the full path to lesspipe.sh should be given\r\n in the above commands.\r\n\r\n As lesspipe.sh is accepting only a single argument, a hierarchical list of file\r\n names has to be separated by a non blank character. A colon is rarely found\r\n in file names, therefore it has been chosen as the separator character. If a\r\n file name does however contain at least one isolated colon, the equal sign =\r\n can be used as an alternate separator character. In that case the = character\r\n has to reoccur as the last character of the argument. At each stage in\r\n extracting files from such a hierarchy the file type is determined. This\r\n guarantees a correct processing and display at each stage of the filtering.\r\n\r\n To view files in multifile archives the following command can be used:\r\n\r\n    less archive_file:contained_file      or\r\n    less archive_file=contained_file=     (with = as separator)  \r\n\r\n This can be used to extract single files from a multifile archive:  \r\n\r\n\tless archive_file:contained_file > extracted_file\r\n\r\n For extracting files less is not required, that can be done also using:  \r\n\r\n\tlesspipe.sh archive_file:contained_file > extracted_file\r\n\r\n Even a file in a multifile archive that itself is contained in yet\r\n another archive can be viewed this way:  \r\n\r\n\tless super_archive:archive_file:contained_file\r\n\r\n The script is able to extract files up to a depth of 6 where applying a\r\n decompression algorithm counts as a separate level. In a few rare cases the\r\n file command does not recognize the correct format (especially with nroff).\r\n In such cases the filtering can be suppressed by a trailing colon on the file\r\n name.\r\n\r\n Display the last file in the file1:..:fileN chain in raw format:  \r\n Suppress input filtering:\t`less file1:..:fileN:`  (append 1 colon)  \r\n Suppress decompression:\t`less file1:..:fileN::` (append 2 colons)  \r\n\r\n Suppress syntax highlighting:\t`less file1:..:fileN:`  (append 1 colon)  \r\n Syntax highlighting (see below) is only tried if less is called with -r or -R\r\n and highlighting support was requested when generating lesspipe.sh !!!\r\n\r\n Several environment variables can influence the behavior of lesspipe.sh.\r\n\r\n LESSQUIET will suppress additional output not belonging to the file contents\r\n if set to a non empty value.\r\n\r\n LESS can be used to switch on colored less output (has to contain -r or -R).\r\n\r\n LESSCOLORIZER can contain a syntax highlighting program different from\r\n the code2color used by default (currently only pygmentize allowed).\r\n\r\n Code for using LESS_ADVANCED_PREPROCESSOR is optionally generated (configure).\r\n LESS_ADVANCED_PREPROCESSOR will switch on filtering methods for html, rtf, ps\r\n files and files with alternate character encoding, if this variable is set. \r\n Filtering these formats is also done if there is no LESS_ADVANCED_PREPROCESSOR\r\n support (then this string is not contained in lesspipe.sh). Otherwise these\r\n types of files will be shown unmodified.\r\n \r\n3. Required programs\r\n====================\r\n\r\n bash\tor zsh or ksh (also pdksh, tested with version 5.2). Configure puts an\r\n        appropriate first line in the script  \r\n file\t(a version with an up to date magic file) (GNU file 4.xx recommended)  \r\n perl\t(for configure, code2color and tarcolor, lesspipe.sh works without it)  \r\n Standard UNIX programs like ar, cat, cut, dd, egrep, gzip, ln, ls, mkdir,\r\n rm, sed, strings, tar, tput and further programs for special formats.\r\n\r\n4. Supported file formats\r\n=========================\r\n\r\n Currently lesspipe.sh [3] supports the following compression methods\r\n and file types (i.e. the file contents gets transformed by lesspipe.sh):\r\n\r\n4.1 Supported compression methods\r\n---------------------------------\r\n*  gzip, compress, pack\trequires gzip  \r\n*  bzip2\t\t\trequires bzip2  \r\n*  zip\t\t\trequires unzip  \r\n*  rar\t\t\trequires rar or unrar  \r\n*  7-zip\t\t\trequires 7za  \r\n*  lzip\t\t\trequires lzip  \r\n*  lzma\t\t\trequires lzma (limited support only)  \r\n*  xz\t\t\trequires xz  \r\n\r\n4.2 List of preprocessed file types\r\n-----------------------------------\r\n*  tar\t\trequires GNU tar and optionally tarcolor for coloring  \r\n*  nroff(mandoc)\trequires groff  \r\n*  ar library\trequires ar  \r\n*  jar archive\trequires fastjar or unzip  \r\n*  rar archive\trequires unrar or rar  \r\n*  7-zip archive\trequires 7za  \r\n*  lzip archive\trequires lzip\r\n*  shared library\trequires nm\r\n*  executable\trequires strings\r\n*  directory\tdisplayed using ls -lA\r\n*  RPM\t\trequires GNU cpio and rpm2cpio or rpmunpack, optionally rpm\r\n*  Microsoft Word\trequires antiword or catdoc\r\n*  MS Powerpoint\trequires ppthtml\r\n*  MS Excel\trequires xlhtml\r\n*  Debian \trequires ar, gzip and tar, shows more info if dpkg is installed\r\n*  html\t\trequires html2text or elinks or links or lynx or w3m\r\n*  pdf\t\trequires pdftotext or pdftohtml\r\n*  perl\t\trequires pod2text\r\n*  rtf\t\trequires unrtf\r\n*  dvi\t\trequires dvi2tty\r\n*  djvu\t\trequires djvutxt\r\n*  ps\t\trequires pstotext or ps2ascii (from the gs package)\r\n*  mp3\t\trequires id3v2 or mp3info or mp3info2\r\n*  jpg, png, gif\trequires identify\r\n*  iso images\trequires isoinfo\r\n*  MacOSX archive\trequires lsbom\r\n*  MacOS X bom\trequires lsbom\r\n*  MacOS X plist\trequires plutil\r\n*  cab\t\trequires cabextract (version 1.0 or above)\r\n*  gpg encrypted\trequires gpg\r\n*  perl storable\trequires perl (and the perl modules Storable and Data::Dumper)\r\n*  perl pod       requires perldoc\r\n*  OASIS\t\tOpendocument text documents (used for Openoffice, Libreoffice)\r\n*  \t\trequires unzip and o3tohtml or sxw2txt (distributed together\r\n* \t\twith lesspipe)\r\n*  nc4\t\trequires ncdump (NetCDF format)\r\n*  hdf5\t\trequires h5dump (Hierarchical Data Format)\r\n\r\n4.3 Conversion of files with alternate character encoding\r\n---------------------------------------------------------\r\n If the file utility reports text containing ISO-8859, UTF-8 or UTF-16 encoded\r\n characters then the text will be transformed using iconv into the default\r\n encoding. This does assume iconv has the right default which can be wrong\r\n in some situations. It is checked if iconv would fail. Then the text is\r\n displayed unmodified.\r\n\r\n4.4 File formats currently not supported\r\n----------------------------------------\r\n(code contributed but commented out)\r\n\r\n jpeg and pbm graphics files to be displayed in ASCII art. The ASCII art\r\n library works with overprinting that does not work properly within less.\r\n Therefore the resulting quality of the converted picture is not satisfactory.\r\n\r\n Display of video streams using mplayer with -aadriver (again ASCII art) is\r\n considered abuse of less and also commented out.\r\n\r\n looking at contents of DOS formatted disks by accessing the proper device file\r\n\r\n5. Colorizing the output\r\n========================\r\n\r\n ATTENTION: Syntax highlighting and other methods of colorizing the output\r\n is only activated if the environment variable LESS is existing and contains\r\n the option -R or -r or less is called with one of these options.\r\n\r\n This guarantees, that instead of literal escape sequences colors are\r\n displayed. The detection of the -r/-R presence at run time is rather\r\n dependent on the operating system and may not work in all cases.\r\n Putting the option in the LESS environment variable is guaranteed to\r\n work. By installing the perl module Proc::ProcessTable the OS dependence\r\n can be reduced as well.\r\n\r\n The display of wrapped long lines and moving backward in a file using the\r\n options -r/-R can give weird output. For an explanation see\r\n http://www.greenwoodsoftware.com/less/faq.html#dashr\r\n\r\n5.1 Syntax highlighting\r\n-----------------------\r\n Experimental support for syntax highlighting was added through a perl\r\n script 'code2color' which is derived from code2html [5].\r\n\r\n As syntax highlighting is rather resource intense it can be switched off by\r\n appending a colon after the file name if the output was colorful. If the\r\n wrong language was chosen for syntax highlighting then another one can be\r\n forced by appending a colon and a suffix to the file name as follows (assuming\r\n this is a file with perl syntax):\r\n\r\n\tless config_file:.pl\r\n\r\n That works as well to force the call of code2color for a given language.\r\n\r\n5.1.1 List of supported languages (code2color)\r\n----------------------------------------------\r\n Text files for the following languages can be highlighted using code2color:  \r\n ada, asm, awk, c, c++, groff, html, xml, java, javascript, lisp, m4,\r\n make, pascal, patch, perl, povray, python, ruby, shellscript, sql  \r\n The corresponding suffixes recognized by code2color are:  \r\n .ada .asm .inc .awk .c .h .cpp .cxx .groff .html .php .xml .java .js .lsp .m4\r\n Makefile .pas .patch .diff .pm .pl .pod .pov .py .rb .sh .sql\r\n\r\n5.1.2 Syntax highlighting alternatives\r\n--------------------------------------\r\n The enabling of syntax highlighting contains OS dependent code and is not\r\n guaranteed to work (it was tested on Linux, Solaris, IRIX, HPUX, AIX,\r\n MacOS X, Cygwin and FreeBSD). It is deactivated by default and not\r\n recommended by me. It can be activated using \"configure\" or \"make MODE=ask\".\r\n\r\n The function code2color contains code to guarantee that color codes are only\r\n sent if less is called with one of the options -r or -R. To ensure that these\r\n checks are always performed, alternate syntax colorizers will be called \r\n from within code2color by setting the environment variable LESSCOLORIZER\r\n to the name of another program. Currently only pygmentize (and code2color as\r\n the default) is allowed. This can be changed in the first lines of code2color.\r\n\r\n Much better syntax highlighting is obtained using the less emulation of vim:\r\n The editor vim comes with a file less.sh, in my case located in\r\n /usr/share/vim/vim73/macros. Assuming that file location \r\n a function lessc (bash, zsh, ksh users)\r\n\r\n\tlessc () { /usr/share/vim/vim73/macros/less.sh \"$@\"}\r\n\r\n or an alias lessc (csh, tcsh users)\r\n\r\n\talias lessc /usr/share/vim/vim73/macros/less.sh\r\n \r\n is defined and \"lessc filename\" is used to view the colorful file contents.\r\n\r\n5.2 Colored Directory listing\r\n-----------------------------\r\nThe conditions to display a colored listing are described above. Depending\r\non the operating system ls is then called with appropriate options to\r\nproduce colored output.\r\n\r\n5.3 Colored listing of tar file contents\r\n----------------------------------------\r\nAs above less has to be called with -r or -R. If also the executable tarcolor\r\n(contained in the lesspipe tar file, see also [7]) is installed, then the\r\nlisting of tar file contents is colored in a similar fashion as directory\r\ncontents.\r\n\r\n6. Displaying files with special characters in the file name\r\n============================================================\r\n\r\n Shell meta characters in file names: space (frequently used in windows\r\n file names), the characters `| & ; ( ) ` < > \" ' # ~ = $ * ? [ ] or \\`\r\n must be escaped by a \\ when used in the shell, e.g. `less a\\ b.tar.gz:a\\\"b`\r\n will display the file a\"b contained in the gzipped tar archive a b.tar.gz.\r\n\r\n Files within an archive that do have an isolated colon in the name cannot\r\n be displayed using the  \r\n\t`archive_name:contained_file_name`  \r\n notation. These files can be displayed using a notation with the alternate\r\n separator character = as follows:\r\n\t`archive_name=contained_file_name=`  \r\n Please note the trailing = which is required.\r\n\r\n7. Examples\r\n===========\r\n\r\n As a typical usage case it is shown how one could display the man page\r\n \"file.man\" found in the Fedora10 RPM source archive file-4.26-3.fc10.src.rpm\r\n\r\n The less command enhanced with the lesspipe.sh filter\r\n\r\n\tless file-4.26-3.fc10.src.rpm\r\n\r\n yields the following output\r\n` ...`  \r\n `-rw-r--r--   1 root     root       584803 Sep 15 16:29 file-4.26.tar.gz`  \r\n `-rw-r--r--   1 root     root        17124 Oct 16 13:01 file.spec`  \r\n\r\n Then the command\r\n\r\n        less file-4.26-3.fc10.src.rpm:file-4.26.tar.gz\r\n\r\n produces the output\r\n` ...`  \r\n `-rw-rw-r-- 10080/10080   16027 2008-08-30 12:01:41 file-4.26/doc/Makefile.in`  \r\n `-rw-rw-r-- 10080/10080   16097 2008-03-07 16:00:07 file-4.26/doc/file.man`  \r\n `-rw-rw-r-- 10080/10080   16943 2008-08-30 11:50:20 file-4.26/doc/magic.man`  \r\n `...`\r\n\r\n The desired man page can finally be viewed with\r\n\r\n        less file-4.26-3.fc10.src.rpm:file-4.26.tar.gz:file-4.26/doc/file.man\r\n\r\n The subcomponents of the argument to less were easily obtained by cut and\r\n paste using information contained in the previous lines of output.\r\n Care has been taken to display the subcomponents already in the way\r\n required by lesspipe, so that in most cases double clicking will select it. \r\n If the nroff sources should have been displayed instead, appending\r\n another colon at the end of the argument would have done the job:\r\n\r\n        less file-4.26-3.fc10.src.rpm:file-4.26.tar.gz:file-4.26/doc/file.man:\r\n\r\n If the man page was compressed (e.g. as file.man.gz) it would have been\r\n uncompressed anyway. To also disallow uncompressing the source file.man.gz\r\n a second colon would have to be appended to the argument.\r\n\r\n Even extracting single files from an archive is possible, like with\r\n\r\n         less file-4.26-3.fc10.src.rpm:file-4.26.tar.gz:file-4.26/src/file.c > file.c\r\n\r\n Files with binary contents can be extracted as well:\r\n\r\n        less file-4.26-3.fc10.src.rpm:file-4.26.tar.gz:: > file-4.26.tar.gz\r\n\r\n Here the two colons at the end of the argument are required to suppress the\r\n unzipping of the resulting file and to extract the tar file instead of\r\n interpreting it.\r\n\r\n Another interesting example is to get the dominating colors of a picture,\r\n that contains a diagram with a few colors only. The command\r\n\r\n        less diagram.png\r\n\r\n does produce a lot of information, among others\r\n` ...`  \r\n  `Histogram:`  \r\n       `720: (  0,  0,127)       #00007F`  \r\n      `3032: (127,127,127)       grey50`  \r\n     `18935: (  0,  0,255)       blue`  \r\n     `21480: (  0,255,  0)       lim`  \r\n     `21041: (  0,255,255)       cyan`  \r\n      `8719: (255,  0,  0)       red`  \r\n     `14476: (255,  0,255)       magenta`  \r\n      `8822: (255,183,  0)       #FFB700`  \r\n     `13608: (255,255,  0)       yellow`  \r\n     `49167: (255,255,255)       white`  \r\n `...`\r\n\r\n Other interesting examples are the inspection of Java's .jar files or Debian\r\n package contents without unpacking the files and even without having java\r\n installed or without working necessarily on a Debian system.\r\n\r\n The contrib directory does contain a less wrapper (a bash/zsh function) that\r\n can be used to display URLs using less. This allows to pass the URL contents\r\n through lesspipe as if it would be a local file.\r\n\r\n8. Other documentation about lesspipe\r\n=====================================\r\n\thttp://ref.cern.ch/CERN/CNL/2002/001/unix-less/  \r\n\thttp://www.linux-magazine.com/issue/21/lesspipe.pdf  \r\n        in bash cookbook (Ch. 8.15) by Carl Albing, Cameron Newham, J. P. Vossen\r\n        http://carloscosta.org/2008/07/05/how-to-get-more-from-less/  \r\n Documentation in german:  \r\n\tgerman.txt (distributed with lesspipe, not updated)  \r\n\thttp://www.linux-magazin.de/Heft-Abo/Ausgaben/2001/01/Bessere-Sicht  \r\n\thttp://www.linux-user.de/ausgabe/2002/04/060-ootb/lesspipe-1.html  \r\n\r\n9. External links\r\n=================\r\n\r\n(last checked: Jan 10 2013):\r\n\r\n9.1 URLs to some utilities\r\n--------------------------\r\n*  antiword   http://www.winfield.demon.nl/\r\n*  html2text  http://www.mbayer.de/html2text/\r\n*  cabextract http://www.cabextract.org.uk/\r\n*  7za        https://sourceforge.net/projects/p7zip/\r\n*  lzip       http://download.savannah.gnu.org/releases/lzip/\r\n*  dvi2tty    http://www.ctan.org/tex-archive/dviware/dvi2tty/\r\n*  unrtf      http://ftp.gnu.org/gnu/unrtf/\r\n*  id3v2      http://id3v2.sourceforge.net/\r\n\r\n9.2 References\r\n--------------\r\n*  [1] http://www.greenwoodsoftware.com/less/\t(less)\r\n*  [2] ftp://ftp.astron.com/pub/file/\t\t(file)\r\n*  [3] https://github.com/wofr06/lesspipe\r\n*  [5] http://www.palfrader.org/code2html/\t(code2html)\r\n*  [6] http://www.darwinsys.com/file/\t\t(file)\r\n*  [7] https://github.com/msabramo/tarcolor\t(tarcolor)\r\n\r\n10. Contributors\r\n================\r\n\r\n The script lesspipe.sh is constantly enhanced thanks to suggestions from\r\n users. Among the additions to lesspipe.sh is the code to browse the ASCII\r\n contents of Word or Openoffice files, to show characteristics of mp3 files\r\n or to decode MacOS X formats.\r\n\r\n Thanks to (in alphabetical order):\r\n* Marc Abramowitz: allow for color output when ls or tar commands are used\r\n*  James Ahlborn: do not interpret .xml files as html\r\n*  Sören Andersen: PPD files colorization requested\r\n*  Andrew Barnert: shell syntax fix\r\n*  Peter D. Barnes, Jr.: plist files for Mac OS X\r\n*  Eduard Bloch: proposed support for ISO images\r\n*  Mathieu Bouillaguet: add support for xz compression\r\n*  Florian Cramer: MS Word, Openoffice support (o3read), ASCIIart, DjVu support\r\n*  Philippe Defert: unattended installation\r\n*  Antonio Diaz Diaz: proposed support for lzip\r\n*  Bastian Fuchs: Issues using bash vs. sh\r\n*  Matt Ghali: more conservative usage of html2text\r\n*  Carl Greco: enhanced output for .deb files\r\n*  Stephan Hegel: suggested better 7za support\r\n*  Michel Hermier: support for DESTDIR in the Makefile\r\n*  Tobias Hoffmann: fixed a bug introduced in v 1.72, add support for Debian 2.0\r\n*    files with xz packed data\r\n*  Christian Höltje: suggested to use LESSCOLORIZER like in the Gentoo distro\r\n*  Jürgen Kahnert: display debian files without dpkg\r\n*  Sebastian Kayser: suggested a less wrapper to display URLs\r\n*  Ben Kibbey: works on FreeBSD\r\n*  Peter Kostka: mktemp on MacOS fixes\r\n*  Heinrich Kuettler: formatting, html via lynx\r\n*  Antony Lee: correctly call pygmentize (no - argument, use -g)\r\n*  Vincent Lefèvre: runtime checks for shell, many enhancements, provided sxw2txt,\r\n*    determine options for 'file' at runtime, display text in the proper encoding\r\n*  David Leverton: detect helper programs at runtime\r\n*  Jay Levitt: suggested to use enscript for highlighting support (see 4.2 above)\r\n*  Vladimir Linek: inspired me to add ps and dvi support\r\n*  Oliver Mangold: correctly display directories with a colon in the name\r\n*  Istvan Marko: speedup of the procedure\r\n*  Markus Meyer: improved mp3 handling\r\n*  Remi Mommsen: Mac OS X support\r\n*  Derek B. Noonburg: PDF files support\r\n*  Martin Otte: mktemp on MacOS fixes\r\n*  Jim Pryor: many enhancements, bug fixes, restructuring of code, tar detection\r\n*  Slaven Rezic: Cygwin support, bug fixes\r\n*  Daniel Risacher: gpg support\r\n*  Jens Schleusener: ksh syntax fixes\r\n*  Ken Teague?: support more versions of file command\r\n*  Matt Thompson: add support for NetCDF and HDF5 files using ncdump, h5dump\r\n*  Paul Townsend: improved zip support for Solaris, bug fixes in configure\r\n*  Petr Uzel: detect helper programs at runtime\r\n*  Chelban Vasile: trap command not working under /bin/sh\r\n*  Götz Waschk: suggested lzma support\r\n*  Michael Wiedmann: Debian packages support\r\n*  Dale Wijnand: Proposed the suppression of informal output\r\n*  Peter Wu: shortcut for unreadable files\r\n","google":"","note":"Don't delete this file! It's used internally to help with page regeneration."}